server:
  port: 9527

spring:
  # 以微服务注册进consul或nacos服务列表内
  application:
    name: cloud-gateway
  cloud:
    # 配置consul地址
    consul:
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
    gateway:
      routes:
        # 路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
        - id: pay_routh1
          # 匹配后提供服务的路由地址
          # uri: http://localhost:8001
          uri: lb://cloud-payment-service
          # 断言，
          predicates:
            # 路径相匹配的进行路由
            - Path=/pay/gateway/get/**
            # 超过规定时间可以访问
            - After=2024-03-13T18:51:12.337340+08:00[Asia/Shanghai]
            # 超过规定时间不可访问
            # - Before=2024-03-13T18:55:12.337340+08:00[Asia/Shanghai]
            # 在规定时间内可以访问
            # - Between=2024-03-13T18:55:12.337340+08:00[Asia/Shanghai],2024-03-13T18:56:12.337340+08:00[Asia/Shanghai]
            # 请求包含Cookie对应键值对才可以访问
            # - Cookie=userName,zoro
            # 请求头要有X-Request-Id属性并且值为整数的正则表达式
            # - Header=X-Request-Id, \d+
            # 请求头要有Host属性并且值要符合下面规则
            # - Host=**.zoro.com
            # 要有参数名username并且值还要是整数才能路由
            # - Query=userName, \d+
            # 外部访问我的IP限制，最大跨度不超过32，目前是1~24它们是 CIDR 表示法。
            # - RemoteAddr=192.168.5.111/24
            # 限制请求方式
            # - Method=POST,GET
            # 自定义断言
            # - My=zoro
            #- name: My
            #  args:
            #    userType: zoro

        # 路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
        - id: pay_routh2
          # 匹配后提供服务的路由地址
          # uri: http://localhost:8001
          uri: lb://cloud-payment-service
          # 断言，路径相匹配的进行路由
          predicates:
            - Path=/pay/gateway/info/**

        # pay_routh3
        - id: pay_routh3
          # 匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          # 断言
          predicates:
            # 路径相匹配的进行路由
            - Path=/pay/gateway/filter/**
            # 被分拆为: PrefixPath + Path
            # 断言，为配合PrefixPath测试过滤，暂时注释掉/pay
            # - Path=/gateway/filter/**
            # 断言，为配合SetPath测试，{segment}的内容最后被SetPath取代
            # - Path=/XYZ/abc/{segment}
          # 过滤器
          filters:
            # 请求头kv，若一头含有多参则重写一行设置
            - AddRequestHeader=X-Request-Zoro1,ZoroValue1
            - AddRequestHeader=X-Request-Zoro2,ZoroValue2
            # 删除请求头sec-fetch-site,sec-fetch-mode
            - RemoveRequestHeader=sec-fetch-site
            - RemoveRequestHeader=sec-fetch-mode
            # 将请求头sec-fetch-user对应的值修改为Blue-UpdateZoro
            - SetRequestHeader=sec-fetch-user,Blue-UpdateZoro
            # 新增请求参数Parameter：k ，v
            - AddRequestParameter=customerId,9527001
            # 删除url请求参数customerName，你传递过来也是null
            - RemoveRequestParameter=customerName
            # 新增请求参数X-Response-Zoro并设值为BlueResponse
            - AddResponseHeader=X-Response-Zoro, BlueResponse
            # 设置回应头Date值为2099-11-11
            # - SetResponseHeader=Date,2099-11-11
            # 将默认自带Content-Type回应属性删除
            # - RemoveResponseHeader=Content-Type
            # http://localhost:9527/pay/gateway/filter
            # - PrefixPath=/pay
            # {segment}表示占位符，你写abc也行但要上下一致
            # - SetPath=/pay/gateway/{segment}
            # 访问http://localhost:9527/pay/gateway/filter跳转到http://www.bilibili.com/
            # - RedirectTo=302, https://www.bilibili.com/
            # 自定义单一过滤器
            - My=Zoro
      # 配置在此处相当于全局通用，自定义秒变Global
      default-filters:
      # 新增请求参数X-Response-Zoro并设值为BlueResponse
      #- AddResponseHeader=X-Response-Zoro, BlueResponse